# Generated by Django 4.2.1 on 2023-06-06 04:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(default='default-icon.jpg', null=True, upload_to='')),
                ('supported_at', models.DateTimeField(null=True)),
                ('description', models.TextField(max_length=900, null=True)),
                ('twitter_id', models.CharField(max_length=15, null=True)),
                ('total_watch_count', models.IntegerField(default=0)),
                ('total_post_count', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('competition_id', models.IntegerField()),
                ('season_id', models.IntegerField()),
                ('matchday', models.IntegerField()),
                ('started_at', models.DateTimeField()),
                ('status', models.CharField(max_length=255, null=True)),
                ('winner', models.CharField(max_length=255, null=True)),
                ('home_score', models.IntegerField(null=True)),
                ('away_score', models.IntegerField(null=True)),
                ('referees_id', models.IntegerField(null=True)),
                ('referees_name', models.CharField(max_length=255, null=True)),
                ('last_updated_at', models.DateTimeField()),
                ('total_watch_count', models.IntegerField(default=0)),
                ('total_post_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('season_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('nationality', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('birthday', models.DateField()),
                ('last_updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('area_id', models.IntegerField()),
                ('competition_id', models.IntegerField()),
                ('season_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=255)),
                ('tla', models.CharField(max_length=255)),
                ('crest_image_url', models.URLField()),
                ('coach_id', models.IntegerField()),
                ('coach_name', models.CharField(max_length=255)),
                ('founded_year', models.IntegerField()),
                ('venue', models.CharField(max_length=255)),
                ('last_updated_at', models.DateTimeField()),
                ('name_ja', models.CharField(max_length=255, null=True)),
                ('crest_image', models.ImageField(null=True, upload_to='')),
                ('crest_badge_image', models.ImageField(null=True, upload_to='')),
                ('total_supporter_count', models.IntegerField(default=0)),
                ('club_color_code_first', models.CharField(default='#FFFFFF', max_length=7)),
                ('club_color_code_second', models.CharField(default='#FFFFFF', max_length=7)),
                ('coach_name_ja', models.CharField(blank=True, max_length=255)),
                ('venue_ja', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('match', models.ForeignKey(db_column='match_id', on_delete=django.db.models.deletion.CASCADE, related_name='match_watches', to='myapp.match')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_watches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'watches',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('content', models.TextField(max_length=900, null=True)),
                ('match', models.ForeignKey(db_column='match_id', on_delete=django.db.models.deletion.CASCADE, related_name='match_posts', to='myapp.match')),
                ('player', models.ForeignKey(db_column='player_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_posts', to='myapp.player')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(db_column='team_id', on_delete=django.db.models.deletion.CASCADE, related_name='players', to='myapp.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(db_column='away_team_id', on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='myapp.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(db_column='home_team_id', on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='myapp.team'),
        ),
        migrations.AddField(
            model_name='account',
            name='support_team',
            field=models.ForeignKey(db_column='support_team_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='support_team', to='myapp.team'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
